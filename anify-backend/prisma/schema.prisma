generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["orderByNulls", "clientExtensions", "postgresqlExtensions", "filteredRelationCount"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator json {
  provider = "prisma-json-types-generator"
}

model Anime {
  id                 String        @id @default(nanoid(10))
  slug               String
  coverImage         String?
  bannerImage        String?
  trailer            String?
  status             Status?
  season             Season  @default(UNKNOWN)
  /// [Title]
  title              Json
  currentEpisode     Int?
  mappings           Json          @default("{}")
  synonyms           String[]
  countryOfOrigin    String?
  description        String?
  duration           Int?
  color              String?
  year               Int?
  /// [Rating]
  rating             Json
  /// [Popularity]
  popularity         Json
  type               String
  format             MediaFormat?  @default(UNKNOWN)
  /// [Relations]
  relations          Json[]         @default([])
  totalEpisodes      Float?
  genres             String[]
  tags               String[]

  /// [Episodes]
  episodes           Json         @default("{\"latest\": {\"updatedAt\": 0, \"latestEpisode\": 0, \"latestTitle\": \"\"}, \"data\": []}")

  averageRating      Float?
  averagePopularity  Float?

  /// [Artwork]
  artwork            Json[] @default([])

  /// [Characters]
  characters         Json[] @default([])

  @@map("anime")
}

model Manga {
  id                 String        @id @default(nanoid(10))
  slug               String
  coverImage         String?
  bannerImage        String?
  status             Status?
  /// [Title]
  title              Json
  mappings           Json          @default("{}")
  synonyms           String[]
  countryOfOrigin    String?
  description        String?
  color              String?
  year               Int?
  /// [Rating]
  rating             Json
  /// [Popularity]
  popularity         Json
  type               String
  format             MediaFormat?  @default(UNKNOWN)
  /// [Relations]
  relations          Json[]         @default([])
  currentChapter     Int?
  totalChapters      Float?
  totalVolumes       Float?
  genres             String[]
  tags               String[]

  /// [Chapters]
  chapters           Json         @default("{\"latest\": {\"updatedAt\": 0, \"latestChapter\": 0, \"latestTitle\": \"\"}, \"data\": []}")

  averageRating      Float?
  averagePopularity  Float?

  /// [Artwork]
  artwork            Json[] @default([])

  /// [Characters]
  characters         Json[] @default([])

  @@map("manga")
}

model SkipTimes {
  id        String  @id @unique
  /// [SkipTimes]
  episodes  Json[]
}

model ApiKey {
  id           String   @id @default(uuid())
  key          String   @unique
  requestCount Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

enum Status {
  FINISHED
  RELEASING
  NOT_YET_RELEASED
  CANCELLED
  HIATUS
  UNKNOWN
}

enum Season {
  UNKNOWN
  SPRING
  SUMMER
  FALL
  WINTER
}

enum MediaFormat {
  UNKNOWN
  TV
  TV_SHORT
  MOVIE
  SPECIAL
  OVA
  ONA
  MUSIC
  MANGA
  ONE_SHOT
  NOVEL
}